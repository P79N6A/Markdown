"#------Basic config--------#                                                                                                            
"

set encoding=utf-8
set termencoding=utf-8

"解决菜单乱码
source $VIMRUNTIME/delmenu.vim
source $VIMRUNTIME/menu.vim
set fileencoding=utf-8
set fileencodings=ucs-bom,utf-8,chinese,cp936

"解决console输出乱码
language messages zh_CN.utf-8


"执行 Vim 缺省提供的 .vimrc 文件的示例，包含了打开语法加亮显示等最常用的功能 
source $VIMRUNTIME/vimrc_example.vim
"设置鼠标运行模式为WINDOWS模式 
source $VIMRUNTIME/mswin.vim
behave mswin

"syn on "语法高亮 
set vb t_vb=
au GuiEnter * set t_vb=
set tags=tags; 
set autochdir 
set helplang=cn     "使用中文帮助文档
set backspace=2
set tabstop=4 "制表符的宽度
set softtabstop=4
set shiftwidth=4 "缩进的空格
set expandtab
set cindent shiftwidth=4
set autoindent     "自动缩进
set cindent "C 插件
set number "设置行号
"set ignorecase "忽略大小写 （查找字符串时）
set hlsearch "高亮显示 （查找字符串是，找到后高亮显示）
set mouse=a "使用鼠标
set ruler     "在右下角显示光标位置
"set showcmd     "显示未敲完的命令
set cmdheight=1 "设定命令行的行数为 1
set laststatus=2 "显示状态栏 (默认值为 1, 无法显示状态栏)
set incsearch "在输入搜索的字符串同时就开始搜索已经输入的部分
set nowrap "一行就一行，别弄到第二行去
set sidescroll=10     "屏幕放不下时，按一次屏幕移动一个字符    
set whichwrap=b,s,<,>,[,]     "跨行移动
set fileformats=unix,dos
set cursorline "突出显示当前行
set showmatch "插入括号时，短暂地跳转到匹配的对应括号
set matchtime=2 "短暂跳转到匹配括号的时间
"set smartindent "开启新行时使用智能自动缩进
filetype plugin indent on "自动识别文件类型，用文件类型plugin脚本，使用缩进定义文件
"set autochdir


"#------- start Vundle-------#                                                                                                         
set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
Plugin 'Tagbar'
Plugin 'ctags.vim'
Plugin 'ctrlp.vim'
Plugin 'EasyGrep'
Plugin 'ack.vim'
Plugin 'ctrlsf.vim'
Plugin 'delimitMate.vim'
Plugin 'Shougo/neocomplete.vim'
Plugin 'dhruvasagar/vim-table-mode'
Plugin 'honza/vim-snippets'
Plugin 'Align'
Plugin 'YankRing.vim'
Plugin 'goyo.vim'
Plugin 'junegunn/limelight.vim'
Plugin 'vim-colors-pencil'


" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
" --Plugin 'tpope/vim-fugitive'--
" plugin from http://vim-scripts.org/vim/scripts.html
" Plugin 'L9'
" Git plugin not hosted on GitHub
" --Plugin 'git://git.wincent.com/command-t.git'--
" git repos on your local machine (i.e. when working on your own plugin)
" --Plugin 'file:///home/gmarik/path/to/plugin'--
" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
" --Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}--
" Install L9 and avoid a Naming conflict if you've already installed a
" different version somewhere else.
" Plugin 'ascenator/L9', {'name': 'newL9'}

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line


"Ctrlp Start
let g:ctrlp_regexp = 1

nnoremap <silent> <F6> :TagbarToggle<CR>

"NERDTree
nnoremap <silent> <F5> :NERDTreeToggle<CR>
"map <c-n> :NERDTreeToggle<CR>
:nn <M-1> 1gt

:nn <M-2> 2gt

:nn <M-3> 3gt

:nn <M-4> 4gt

:nn <M-5> 5gt

:nn <M-6> 6gt

:nn <M-7> 7gt

:nn <M-8> 8gt

:nn <M-9> 9gt

:nn <M-0> :tablast<CR>


"CtrlSF
nmap     <C-F>f <Plug>CtrlSFPrompt
vmap     <C-F>f <Plug>CtrlSFVwordPath
vmap     <C-F>F <Plug>CtrlSFVwordExec
nmap     <C-F>n <Plug>CtrlSFCwordPath
nmap     <C-F>p <Plug>CtrlSFPwordPath
nnoremap <C-F>o :CtrlSFOpen<CR>
nnoremap <C-F>t :CtrlSFToggle<CR>
inoremap <C-F>t <Esc>:CtrlSFToggle<CR>

"netcomplete
let g:neocomplete#enable_at_startup = 1

"YankRing
nnoremap <silent> <F11> :YRShow<CR>


"limelight

nmap <Leader>l <Plug>(Limelight)
xmap <Leader>l <Plug>(Limelight)

" Color name (:help cterm-colors) or ANSI code
let g:limelight_conceal_ctermfg = 'gray'
let g:limelight_conceal_ctermfg = 240

" Color name (:help gui-colors) or RGB color
let g:limelight_conceal_guifg = 'DarkGray'
let g:limelight_conceal_guifg = '#777777'

" Default: 0.5
let g:limelight_default_coefficient = 0.7

" Number of preceding/following paragraphs to include (default: 0)
let g:limelight_paragraph_span = 0

" Beginning/end of paragraph
"   When there's no empty line between the paragraphs
"   and each paragraph starts with indentation
let g:limelight_bop = '^\s'
let g:limelight_eop = '\ze\n^\s'

" Highlighting priority (default: 10)
"   Set it to -1 not to overrule hlsearch
let g:limelight_priority = -1

autocmd! User GoyoEnter Limelight
autocmd! User GoyoLeave Limelight!

"vim-colors-pencil
set background=dark
let g:pencil_higher_contrast_ui = 1   " 0=low (def), 1=high
let g:pencil_neutral_headings = 1 " 0=blue (def), 1=normal
let loaded_matchparen = 1

colorscheme pencil

"autocmd VimEnter * Limelight

